#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.5.2
# from Racc grammar file "".
#

require 'racc/parser.rb'
module Coeus
  class CTL < Racc::Parser

module_eval(<<'...end ctl.y/module_eval...', 'ctl.y', 8)
  def parse(input)
    scan_str(input)
  end
...end ctl.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     2,     3,     4,     5,     6 ]

racc_action_check = [
     0,     1,     2,     3,     4 ]

racc_action_pointer = [
    -2,     1,    -1,     3,     2,   nil,   nil ]

racc_action_default = [
    -3,    -3,    -1,    -3,    -3,     7,    -2 ]

racc_goto_table = [
     1 ]

racc_goto_check = [
     1 ]

racc_goto_pointer = [
   nil,     0 ]

racc_goto_default = [
   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 5, :_reduce_none,
  3, 5, :_reduce_2 ]

racc_reduce_n = 3

racc_shift_n = 7

racc_token_table = {
  false => 0,
  :error => 1,
  :DIGIT => 2,
  :ADD => 3 }

racc_nt_base = 4

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DIGIT",
  "ADD",
  "$start",
  "expression" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ctl.y', 3)
  def _reduce_2(val, _values, result)
     return val[0] + val[1]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class CTL
end   # module Coeus
